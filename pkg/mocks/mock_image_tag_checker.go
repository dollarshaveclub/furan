// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dollarshaveclub/furan/lib/tagcheck (interfaces: ImageTagChecker)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockImageTagChecker is a mock of ImageTagChecker interface
type MockImageTagChecker struct {
	ctrl     *gomock.Controller
	recorder *MockImageTagCheckerMockRecorder
}

// MockImageTagCheckerMockRecorder is the mock recorder for MockImageTagChecker
type MockImageTagCheckerMockRecorder struct {
	mock *MockImageTagChecker
}

// NewMockImageTagChecker creates a new mock instance
func NewMockImageTagChecker(ctrl *gomock.Controller) *MockImageTagChecker {
	mock := &MockImageTagChecker{ctrl: ctrl}
	mock.recorder = &MockImageTagCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockImageTagChecker) EXPECT() *MockImageTagCheckerMockRecorder {
	return m.recorder
}

// AllTagsExist mocks base method
func (m *MockImageTagChecker) AllTagsExist(arg0 []string, arg1 string) (bool, []string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllTagsExist", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].([]string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// AllTagsExist indicates an expected call of AllTagsExist
func (mr *MockImageTagCheckerMockRecorder) AllTagsExist(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllTagsExist", reflect.TypeOf((*MockImageTagChecker)(nil).AllTagsExist), arg0, arg1)
}
