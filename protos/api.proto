syntax = "proto3";

package furanrpc;

service FuranExecutor {
  rpc StartBuild (BuildRequest) returns (BuildRequestResponse) {}
  rpc GetBuildStatus (BuildStatusRequest) returns (BuildStatusResponse) {}
  rpc MonitorBuild (BuildStatusRequest) returns (stream BuildEvent) {}
  rpc CancelBuild (BuildCancelRequest) returns (BuildCancelResponse) {}
}

message BuildDefinition {
  string github_repo = 1;
  string dockerfile_path = 2;
  string ref = 3; // sha/branch/tag
  repeated string tags = 4;
  bool tag_with_commit_sha = 5;
  map<string, string> args = 6;
}

message PushRegistryDefinition {
  string repo = 1;
}

message PushS3Definition {
  string region = 1;
  string bucket = 2;
  string key_prefix = 3;
}

message PushDefinition {
  PushRegistryDefinition registry = 1;
  PushS3Definition s3 = 2;
}

// Requests

message BuildRequest {
  BuildDefinition build = 1;
  PushDefinition push = 2;
  bool skip_if_exists = 3; // (registry: all tags exist, s3: object exists)
}

message BuildStatusRequest {
  string build_id = 1;
}

message BuildCancelRequest {
  string build_id = 1;
}

// Responses

message BuildRequestResponse {
  string build_id = 2;
}

message BuildCancelResponse {
  string build_id = 1;
}

message BuildStatusResponse {
  enum BuildState {
    STARTED = 0;
    BUILDING = 1;
    PUSHING = 2;
    SUCCESS = 3;
    BUILD_FAILURE = 4;
    PUSH_FAILURE = 5;
    NOT_NECESSARY = 6;
  }
  string build_id = 1;
  BuildRequest build_request = 2;
  BuildState state = 3;
  bool finished = 4;
  bool failed = 5;
  bool cancelled = 6;
  string started = 7;
  string completed = 8;
  double duration = 9;
}

// Messages server-streamed and/or published to Kafka

message BuildEventError {
  enum ErrorType {
    FATAL = 0;
    TEMPORARY = 1;
    NO_ERROR = 2;
  }
  bool is_error = 1;
  ErrorType error_type = 2;
}

message BuildEvent {
  enum EventType {
    DOCKER_BUILD_STREAM = 0;
    DOCKER_PUSH_STREAM = 1;
    LOG = 2;
  }
  BuildEventError event_error = 1;
  EventType event_type = 2;
  string build_id = 3;
  string message = 4;
  bool build_finished = 5;
}
