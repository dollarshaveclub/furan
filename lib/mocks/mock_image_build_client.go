// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dollarshaveclub/furan/lib/builder (interfaces: ImageBuildClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	types "github.com/docker/engine-api/types"
	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
	io "io"
	reflect "reflect"
)

// MockImageBuildClient is a mock of ImageBuildClient interface
type MockImageBuildClient struct {
	ctrl     *gomock.Controller
	recorder *MockImageBuildClientMockRecorder
}

// MockImageBuildClientMockRecorder is the mock recorder for MockImageBuildClient
type MockImageBuildClientMockRecorder struct {
	mock *MockImageBuildClient
}

// NewMockImageBuildClient creates a new mock instance
func NewMockImageBuildClient(ctrl *gomock.Controller) *MockImageBuildClient {
	mock := &MockImageBuildClient{ctrl: ctrl}
	mock.recorder = &MockImageBuildClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockImageBuildClient) EXPECT() *MockImageBuildClientMockRecorder {
	return m.recorder
}

// ImageBuild mocks base method
func (m *MockImageBuildClient) ImageBuild(arg0 context.Context, arg1 io.Reader, arg2 types.ImageBuildOptions) (types.ImageBuildResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImageBuild", arg0, arg1, arg2)
	ret0, _ := ret[0].(types.ImageBuildResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ImageBuild indicates an expected call of ImageBuild
func (mr *MockImageBuildClientMockRecorder) ImageBuild(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImageBuild", reflect.TypeOf((*MockImageBuildClient)(nil).ImageBuild), arg0, arg1, arg2)
}

// ImageInspectWithRaw mocks base method
func (m *MockImageBuildClient) ImageInspectWithRaw(arg0 context.Context, arg1 string) (types.ImageInspect, []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImageInspectWithRaw", arg0, arg1)
	ret0, _ := ret[0].(types.ImageInspect)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ImageInspectWithRaw indicates an expected call of ImageInspectWithRaw
func (mr *MockImageBuildClientMockRecorder) ImageInspectWithRaw(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImageInspectWithRaw", reflect.TypeOf((*MockImageBuildClient)(nil).ImageInspectWithRaw), arg0, arg1)
}

// ImageList mocks base method
func (m *MockImageBuildClient) ImageList(arg0 context.Context, arg1 types.ImageListOptions) ([]types.Image, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImageList", arg0, arg1)
	ret0, _ := ret[0].([]types.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ImageList indicates an expected call of ImageList
func (mr *MockImageBuildClientMockRecorder) ImageList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImageList", reflect.TypeOf((*MockImageBuildClient)(nil).ImageList), arg0, arg1)
}

// ImagePush mocks base method
func (m *MockImageBuildClient) ImagePush(arg0 context.Context, arg1 string, arg2 types.ImagePushOptions) (io.ReadCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImagePush", arg0, arg1, arg2)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ImagePush indicates an expected call of ImagePush
func (mr *MockImageBuildClientMockRecorder) ImagePush(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImagePush", reflect.TypeOf((*MockImageBuildClient)(nil).ImagePush), arg0, arg1, arg2)
}

// ImageRemove mocks base method
func (m *MockImageBuildClient) ImageRemove(arg0 context.Context, arg1 string, arg2 types.ImageRemoveOptions) ([]types.ImageDelete, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImageRemove", arg0, arg1, arg2)
	ret0, _ := ret[0].([]types.ImageDelete)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ImageRemove indicates an expected call of ImageRemove
func (mr *MockImageBuildClientMockRecorder) ImageRemove(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImageRemove", reflect.TypeOf((*MockImageBuildClient)(nil).ImageRemove), arg0, arg1, arg2)
}

// ImageSave mocks base method
func (m *MockImageBuildClient) ImageSave(arg0 context.Context, arg1 []string) (io.ReadCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImageSave", arg0, arg1)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ImageSave indicates an expected call of ImageSave
func (mr *MockImageBuildClientMockRecorder) ImageSave(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImageSave", reflect.TypeOf((*MockImageBuildClient)(nil).ImageSave), arg0, arg1)
}
